// <auto-generated />
using System;
using GestionClasesGim.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionClasesGim.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GestionClasesGim.Entities.Clase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("clase_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("clase_activo");

                    b.Property<int>("CapacidadMax")
                        .HasColumnType("int")
                        .HasColumnName("clase_capacidadMax");

                    b.Property<int>("Cupos")
                        .HasColumnType("int")
                        .HasColumnName("clase_cupos");

                    b.Property<DateTime>("FechaHorario")
                        .HasColumnType("datetime2")
                        .HasColumnName("clase_fechahorario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("clase_nombre");

                    b.Property<string>("imagenUrl")
                        .IsRequired()
                        .HasColumnType("VARCHAR(5000)")
                        .HasColumnName("clase_imagenUrl");

                    b.HasKey("Id");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Historial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("historial_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClaseId")
                        .HasColumnType("int")
                        .HasColumnName("clase_id");

                    b.Property<int>("TipoMovId")
                        .HasColumnType("int")
                        .HasColumnName("tipoMov_id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("ClaseId");

                    b.HasIndex("TipoMovId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Historiales");
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("role_activo");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role_description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role_name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Description = "Admin",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Description = "Alumno",
                            Name = "Alumno"
                        });
                });

            modelBuilder.Entity("GestionClasesGim.Entities.TipoMov", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tipoMov_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("tipoMov_activo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipoMov_descripcion");

                    b.HasKey("Id");

                    b.ToTable("TipoMovs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = false,
                            Descripcion = "Inscripcion"
                        },
                        new
                        {
                            Id = 2,
                            Activo = false,
                            Descripcion = "Cancelacion"
                        });
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("usuario_activo");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("usuario_apellido");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)")
                        .HasColumnName("usuario_clave");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("usuario_dni");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("usuario_nombre");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Apellido = "Scaglione",
                            Clave = "caf2283ef018112cc755da6f4452473bd8ffce41baf2e685c0583f769da63eb5",
                            Dni = 41826520,
                            Nombre = "Franco",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Alumno", b =>
                {
                    b.HasBaseType("GestionClasesGim.Entities.Usuario");

                    b.Property<DateTime?>("FechaInscripcion")
                        .HasColumnType("datetime2")
                        .HasColumnName("alumno_fechainscripcion");

                    b.Property<string>("imagenUrl")
                        .IsRequired()
                        .HasColumnType("VARCHAR(5000)")
                        .HasColumnName("alumno_imagenUrl");

                    b.HasDiscriminator().HasValue("Alumno");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Apellido = "Avila",
                            Clave = "57bf859ec80d6c0d016be06a0e9694684d53951db5f5e18f72d4e59ee1ac8096",
                            Dni = 20587469,
                            Nombre = "Maria Luz",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2024, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Apellido = "Scaglione",
                            Clave = "92aa37811a86fb7e8aec77e26361f1983ce838940a5f3736fc083fa2bf247dc3",
                            Dni = 52467894,
                            Nombre = "Natalia",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2024, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Apellido = "Scaglione",
                            Clave = "c808983b806db5d535f1b84ba36510dd8eb6f68d4e31a136143f0c488648c6a9",
                            Dni = 97852654,
                            Nombre = "Vicente",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2022, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Apellido = "Barisano",
                            Clave = "c808983b806db5d535f1b84ba36510dd8eb6f68d4e31a136143f0c488648c6a9",
                            Dni = 23451474,
                            Nombre = "Facundo",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Apellido = "Croce",
                            Clave = "ade1bfc7f862a3e28ca044e8c9e32103ea452b62946ae44ecd6076095f2e322d",
                            Dni = 56789845,
                            Nombre = "Eliana",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2024, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Apellido = "Italia",
                            Clave = "ade1bfc7f862a3e28ca044e8c9e32103ea452b62946ae44ecd6076095f2e322d",
                            Dni = 32347841,
                            Nombre = "Jaqueline",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2022, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Apellido = "Lozada",
                            Clave = "d167660fe711956a00d3dca7b49b5c95cfd2d40c980b3dadf1af31ba0915d799",
                            Dni = 87456548,
                            Nombre = "Jony",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            Apellido = "Acosta",
                            Clave = "cb096c1ca77084ae25d67db3826eba376c48cf53aa308e30ccf52179628f88e8",
                            Dni = 65986563,
                            Nombre = "Claudio",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2024, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 10,
                            Activo = true,
                            Apellido = "Garcia",
                            Clave = "ade1bfc7f862a3e28ca044e8c9e32103ea452b62946ae44ecd6076095f2e322d",
                            Dni = 78981232,
                            Nombre = "Kim",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2024, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 11,
                            Activo = true,
                            Apellido = "Vera",
                            Clave = "57bf859ec80d6c0d016be06a0e9694684d53951db5f5e18f72d4e59ee1ac8096",
                            Dni = 56564564,
                            Nombre = "Ezequiel",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2022, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 12,
                            Activo = true,
                            Apellido = "Leoni",
                            Clave = "c808983b806db5d535f1b84ba36510dd8eb6f68d4e31a136143f0c488648c6a9",
                            Dni = 62616344,
                            Nombre = "Nicolas",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2024, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 13,
                            Activo = true,
                            Apellido = "Del Olio",
                            Clave = "92aa37811a86fb7e8aec77e26361f1983ce838940a5f3736fc083fa2bf247dc3",
                            Dni = 56111243,
                            Nombre = "Marina",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2024, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 14,
                            Activo = true,
                            Apellido = "Ballarini",
                            Clave = "08e9366a7aa060344c3c9eb571fb3d49157350b90c89c6905e83767961a5d714",
                            Dni = 64445121,
                            Nombre = "Manuel",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2022, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        },
                        new
                        {
                            Id = 15,
                            Activo = true,
                            Apellido = "Solimano",
                            Clave = "57bf859ec80d6c0d016be06a0e9694684d53951db5f5e18f72d4e59ee1ac8096",
                            Dni = 33265561,
                            Nombre = "Gabriela",
                            RoleId = 2,
                            FechaInscripcion = new DateTime(2022, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            imagenUrl = " "
                        });
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Historial", b =>
                {
                    b.HasOne("GestionClasesGim.Entities.Clase", "Clase")
                        .WithMany()
                        .HasForeignKey("ClaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionClasesGim.Entities.TipoMov", "TipoMov")
                        .WithMany()
                        .HasForeignKey("TipoMovId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionClasesGim.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clase");

                    b.Navigation("TipoMov");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Usuario", b =>
                {
                    b.HasOne("GestionClasesGim.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
