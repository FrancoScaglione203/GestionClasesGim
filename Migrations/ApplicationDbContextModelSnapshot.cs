// <auto-generated />
using System;
using GestionClasesGim.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionClasesGim.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GestionClasesGim.Entities.Clase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("clase_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("clase_activo");

                    b.Property<int>("CapacidadMax")
                        .HasColumnType("int")
                        .HasColumnName("clase_capacidadMax");

                    b.Property<int>("Cupos")
                        .HasColumnType("int")
                        .HasColumnName("clase_cupos");

                    b.Property<DateTime>("FechaHorario")
                        .HasColumnType("datetime2")
                        .HasColumnName("clase_fechahorario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("clase_nombre");

                    b.HasKey("Id");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Historial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("historial_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClaseId")
                        .HasColumnType("int")
                        .HasColumnName("clase_id");

                    b.Property<int>("TipoMovId")
                        .HasColumnType("int")
                        .HasColumnName("tipoMov_id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("ClaseId");

                    b.HasIndex("TipoMovId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Historiales");
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("role_activo");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role_description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("role_name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Description = "Admin",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Description = "Alumno",
                            Name = "Alumno"
                        });
                });

            modelBuilder.Entity("GestionClasesGim.Entities.TipoMov", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tipoMov_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("tipoMov_activo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipoMov_descripcion");

                    b.HasKey("Id");

                    b.ToTable("TipoMovs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = false,
                            Descripcion = "Inscripcion"
                        },
                        new
                        {
                            Id = 2,
                            Activo = false,
                            Descripcion = "Cancelacion"
                        });
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("usuario_activo");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("usuario_apellido");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)")
                        .HasColumnName("usuario_clave");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("usuario_dni");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("usuario_nombre");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Usuario");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Apellido = "Scaglione",
                            Clave = "1234",
                            Dni = 41826520,
                            Nombre = "Franco",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Alumno", b =>
                {
                    b.HasBaseType("GestionClasesGim.Entities.Usuario");

                    b.Property<DateTime?>("FechaInscripcion")
                        .HasColumnType("datetime2")
                        .HasColumnName("alumno_fechainscripcion");

                    b.HasDiscriminator().HasValue("Alumno");
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Historial", b =>
                {
                    b.HasOne("GestionClasesGim.Entities.Clase", "Clase")
                        .WithMany()
                        .HasForeignKey("ClaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionClasesGim.Entities.TipoMov", "TipoMov")
                        .WithMany()
                        .HasForeignKey("TipoMovId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionClasesGim.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clase");

                    b.Navigation("TipoMov");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestionClasesGim.Entities.Usuario", b =>
                {
                    b.HasOne("GestionClasesGim.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
